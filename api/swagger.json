{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipes API",
    "description": "This is a simple API for managing recipes.",
    "contact": {
      "name": "Mitchel Egboko",
      "email": "megboko@gmail.com"
    }
  },
  "paths": {
    "/signin": {
      "post": {
        "summary": "Sign-in and generate a JWT token",
        "operationId": "signinUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login (JWT token returned)",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-08-01T16:45:30Z"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "Refresh a JWT token",
        "operationId": "refreshToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token to refresh",
            "required": true,
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful token refresh",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-08-01T18:00:00Z"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "summary": "Create a new recipe",
        "operationId": "createRecipe",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "recipe",
            "in": "body",
            "description": "The recipe to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created recipe",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized. The user needs to send a valid token."
          }
        }
      },
      "get": {
        "summary": "List all recipes",
        "operationId": "listRecipes",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of recipes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipe"
              }
            }
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "summary": "Get a specific recipe by ID",
        "operationId": "getRecipeById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recipe to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested recipe",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "put": {
        "summary": "Update a recipe by ID",
        "operationId": "updateRecipe",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recipe to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipe",
            "in": "body",
            "description": "The updated recipe data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated recipe",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "404": {
            "description": "Recipe not found"
          },
          "401": {
            "description": "Unauthorized. The user needs to send a valid token."
          }
        }
      },
      "delete": {
        "summary": "Delete a recipe by ID",
        "operationId": "deleteRecipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the recipe to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted recipe"
          },
          "404": {
            "description": "Recipe not found"
          },
          "401": {
            "description": "Unauthorized. The user needs to send a valid token."
          }
        }
      }
    }
  },
  "definitions": {
    "Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "12345abcd"
        },
        "name": {
          "type": "string",
          "example": "Tomato Soup"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["soup", "vegetarian"]
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["Tomatoes", "Onion", "Garlic"]
        },
        "instructions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["Chop vegetables", "Boil water", "Add ingredients"]
        },
        "publishedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2023-10-05T15:00:00Z"
        }
      }
    }
  }
}

